/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void start_test(GButton source, GEvent event) { //_CODE_:start_button:264212:
  // START BUTTON
  println("start_button - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:start_button:264212:

public void stop_test(GButton source, GEvent event) { //_CODE_:stop_button:289303:
  // STOP BUTTON
  println("stop_button - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:stop_button:289303:

public void position(GTextArea source, GEvent event) { //_CODE_:x_input:412721:
  println("x_input - GTextArea >> GEvent." + event + " @ " + millis());
} //_CODE_:x_input:412721:

public void velocity_x(GTextArea source, GEvent event) { //_CODE_:vel_input:368130:
  println("vel_input - GTextArea >> GEvent." + event + " @ " + millis());
} //_CODE_:vel_input:368130:

public void cycle_x(GTextArea source, GEvent event) { //_CODE_:cycle_input:939489:
  println("cycle_input - GTextArea >> GEvent." + event + " @ " + millis());
} //_CODE_:cycle_input:939489:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  start_button = new GButton(this, 10, 180, 140, 40);
  start_button.setText("Start");
  start_button.setTextBold();
  start_button.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  start_button.addEventHandler(this, "start_test");
  stop_button = new GButton(this, 160, 180, 140, 40);
  stop_button.setText("Stop");
  stop_button.setTextBold();
  stop_button.setLocalColorScheme(GCScheme.RED_SCHEME);
  stop_button.addEventHandler(this, "stop_test");
  x_input = new GTextArea(this, 10, 130, 90, 40, G4P.SCROLLBARS_NONE);
  x_input.setOpaque(true);
  x_input.addEventHandler(this, "position");
  vel_input = new GTextArea(this, 110, 130, 90, 40, G4P.SCROLLBARS_NONE);
  vel_input.setOpaque(true);
  vel_input.addEventHandler(this, "velocity_x");
  cycle_input = new GTextArea(this, 210, 130, 90, 40, G4P.SCROLLBARS_NONE);
  cycle_input.setOpaque(true);
  cycle_input.addEventHandler(this, "cycle_x");
  label1 = new GLabel(this, 10, 110, 90, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Î”x[cm]");
  label1.setOpaque(false);
  label2 = new GLabel(this, 110, 110, 90, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Speed[cm/s]");
  label2.setOpaque(false);
  label3 = new GLabel(this, 210, 110, 90, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Num Cycles");
  label3.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GButton start_button; 
GButton stop_button; 
GTextArea x_input; 
GTextArea vel_input; 
GTextArea cycle_input; 
GLabel label1; 
GLabel label2; 
GLabel label3; 
